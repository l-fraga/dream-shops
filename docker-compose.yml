# ---------- REDE COMPARTILHADA ----------
networks:
  dreamshops:

# ---------- VOLUMES PERSISTENTES ----------
volumes:
  #  docker volume create dreamshops-postgres-data     (externo no servidor)
  dreamshops-postgres-data:
    external: true
  #  docker volume create dreamshops-prometheus-data     (externo no servidor)
  dreamshops-prometheus-data:
    external: true

# ---------- SERVIÃ‡OS ----------
services:
  # ------------------ PostgreSQL ------------------
  postgres:
    container_name: dreamshops-db
    image: postgres:16
    restart: on-failure:3
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - dreamshops
    volumes:
      - dreamshops-postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      start_period: 5s
      interval: 10s
      timeout: 5s
      retries: 3

  # ------------------ PostgreSQL Exporter ------------------
  postgresql-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: postgresql-exporter
    environment:
      - DATA_SOURCE_NAME=dreamshops_user://postgres:dreamshops_password@postgresql:5432/postgres?sslmode=disable
    ports:
      - "9187:9187"
    networks:
      - dreamshops
    depends_on:
      - postgres

  # ------------------ Spring Boot APP ------------------
  app:
    container_name: dreamshops-app
    build: .
    restart: on-failure:3
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - dreamshops
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      start_period: 20s
      interval: 10s
      timeout: 5s
      retries: 3

  # Prometheus
  prometheus:
    container_name: prometheus
    build:
      context: ./src/main/java/com/dailycodework/dreamshops/utils/prometheus
      dockerfile: Dockerfile
    image: dreamshops/prometheus
    environment:
      - PROMETHEUS_INTERNAL_HOST=${PROMETHEUS_INTERNAL_HOST}
      - PROMETHEUS_EXTERNAL_HOST=${PROMETHEUS_EXTERNAL_HOST}
      - PROMETHEUS_INTERNAL_PORT=${PROMETHEUS_INTERNAL_PORT}
      - PROMETHEUS_EXTERNAL_PORT=${PROMETHEUS_EXTERNAL_PORT}
    volumes:
      - dreamshops-prometheus-data:/prometheus
      - ./src/main/java/com/dailycodework/dreamshops/utils/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./src/main/java/com/dailycodework/dreamshops/utils/prometheus/alerts.yml:/etc/prometheus/alerts.yml
    networks:
      - dreamshops
    ports:
      - ${PROMETHEUS_EXTERNAL_PORT}:${PROMETHEUS_INTERNAL_PORT}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:${PROMETHEUS_INTERNAL_PORT}/-/healthy" ]
      start_period: 30s
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always